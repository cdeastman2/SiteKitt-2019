<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAArV53FaxnfIasaH1lqVZxBq1UcgasaH1lq2h9hqtgdxUAAAAAAAAAAKlT
        bhGsY3p5AAAAAAAAAAAAAAAAh0ZcALtkgAa7cok4vnSLMLxaeQPCW3wDv3WMMLtyiTi5ZX8GiEhcAAAA
        AAC5W3gHwHSMNwAAAAAAAAAAAAAAAHQ3SwGYZ3gNoG+AFKJleQbjV4IA7GGKAKJkeAahb4AUmmd5DXU5
        SwEAAAAAmkxmAJ9fcwQAAAAAAAAAAAAAAACoYXgYq22BbKpvgmyiZ3siAAAAAAAAAACiZnkiqm+CbKtu
        gmyoYngYAAAAAJ9NaAWkXXQ4AAAAAAAAAAAAAAAAuW2GILp2i4e4c4h0sWh/FwAAAAAAAAAAsmd+F7hz
        iHS5d4uHt22FIAAAAACmTmsEq1l0KQAAAAAAAAAAkk5iANp1lgLHfZQgx36UKcVsiAYAAAAAAAAAAMZt
        iQbHfpQpxnyTINVxkQKSTmMAm0hiAAD//wAAAAAAAAAAAIpJXAKeZ3gYpXeGL6JygSaYXXAJbjdKAGox
        RACYWm8JoXCAJqV3hy+eaXsYi0leAncvRACPT2QHAAAAAAAAAACiV28ppWR5fKx3iHeqdIVsomR4Jzcb
        JAA1GCIAoWJ3J6pyhGyseIl3pWZ6fKJYbyieRWIKoldvVAAAAAAAAAAAs2Z/Q7BvhJaudodts3eKS7Fo
        fw+EQlkAgDtSALFnfw+0d4lLrnaHba9vhJayZ39CpUVkC6hSbUgAAAAAAAAAAMZ3kRLDhJhSxY6fhMmN
        oGHHbYkLZjNEAGIuPwDJbYoLyo2gYcWOn4TCg5dSxXePEvqd4gC9PmYElFFmAKpyhQD///8AkUddBc6E
        nBDZjqYM0HGPAQAAAAAAAAAA0nKQAdqOpgzOhJwQkUZdBf///wCrc4YAfE1cAHg3TAOdZXghroCPVbWM
        mmuvg5JYoGx+J4REWQMAAAAAAAAAAIREWAOganwnr4KRWLWMmmuugZBVnWZ5IXg3TAOeWXA9r3WIrLqL
        m7/Al6WovJCfsLJ+j3WbXHEQAAAAAAAAAACbW3AQsXyOdbyOnbDAmKaou42cv7B3iqyfWnE9r26ChLqD
        lOGxfI1ws3qLT694iTe2gJEirHCDBQAAAAAAAAAArG6CBbV+kCKvd4k3s3qMT7J9jXC6hJbhr2+DhL1/
        k1HImajByZ2rs8ecqaTGl6Vnu3aKGKFidQAAAAAAAAAAAKFfdQC7dosYxpelZ8ecqaTInauzyJmowb2A
        k1HAd4wLy5SlRdGjspbVrbnOz6KwlL56jiXKlKYAAAAAAAAAAADIkqQAvnqOJdCisJTVrbnO0aOxlsqU
        pUW+d40L+98AAP//AAD//wAA//8AAPfvAAD//wAA//8AAP//AADv9wAA9+8AAP//AAD//wAAh+EAAD/8
        AACP8QAAx+MAAA==
</value>
  </data>
</root>